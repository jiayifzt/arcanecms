server {
	listen   80;

	server_name <server hostname> [aliases];

	root	<full path to site root>;
	index	index.php;

	location / {
		try_files $uri $uri/ /index.php;
	}

	location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
		access_log off;
		expires 30d;
		add_header Pragma public;
		add_header Cache-Control "public, mustrevalidate, proxy-revalidate";
	}
	
	location = /robots.txt { access_log off; log_not_found off; }
	location = /favicon.ico { access_log off; log_not_found off; }
	location ~ /\.	{ access_log off; log_not_found off; deny all; }
	location ~ ~$	{ access_log off; log_not_found off; deny all; }

	#error_page 403 /error403;
	#error_page 404 /error404;

	# redirect server error pages to the static page /50x.html
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/www;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location ~ \.php$ {
		fastcgi_split_path_info	^(.+\.php)(/.+)$; # For security. Not used by arcane, but used by other common applications
		include fastcgi_params;
		fastcgi_pass	127.0.0.1:9000;
		fastcgi_index	index.php;
		fastcgi_param	SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_intercept_errors	on;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	location ~ /\.ht {
		deny all;
	}
	# deny access to any sqlite databases.
	location ~ .sqlite { 
		deny all;
	}
	location ~ .db {
		deny all;
	}
	# keep people out of the includes. they don't need to be there.
	location = /includes/* {
		deny all;
	}
}
